{"version":3,"sources":["logo.png","reducers/index.js","actions/index.js","saga/index.js","components/About.js","components/Home.js","components/MainMenu.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","url","loading","error","reducer","state","arguments","length","undefined","action","type","requestDog","requestDogSuccess","data","message","requestDogError","watchFetchDog","fetchDogAsync","regenerator_default","a","wrap","_context","prev","next","takeEvery","stop","_marked","this","_context2","put","call","fetch","then","res","json","sent","t0","_marked2","About","react_default","createElement","Home","props","params","src","alt","onClick","dispatch","MainMenu","Link","to","App","_this","BrowserRouter","basename","process","className","logo","components_MainMenu","Route","exact","path","render","components_Home","component","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ConnectedApp","connect","ReactDOM","es","document","getElementById","URL","origin","addEventListener","concat","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9d6bc8f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6f5790a3.png\";","// Reducer\nconst initialState = {\n  url: '',\n  loading: false,\n  error: false,\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REQUESTED_DOG':\n      return {\n        url: '',\n        loading: true,\n        error: false,\n      };\n    case 'REQUESTED_DOG_SUCCEEDED':\n      return {\n        url: action.url,\n        loading: false,\n        error: false,\n      };\n    case 'REQUESTED_DOG_FAILED':\n      return {\n        url: '',\n        loading: false,\n        error: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","// Action Creators\nexport const requestDog = () => {\n  return { type: 'REQUESTED_DOG' }\n};\n\nexport const requestDogSuccess = (data) => {\n  return { type: 'REQUESTED_DOG_SUCCEEDED', url: data.message }\n};\n\nexport const requestDogError = () => {\n  return { type: 'REQUESTED_DOG_FAILED' }\n};\n\nexport const fetchDog = () => {\n  return { type: 'FETCHED_DOG' }\n};","import { takeEvery } from 'redux-saga';\nimport { put, call } from 'redux-saga/effects';\nimport { requestDog, requestDogSuccess, requestDogError } from '../actions';\n\n// Sagas\nexport function* watchFetchDog() {\n  yield takeEvery('FETCHED_DOG', fetchDogAsync);\n}\n\nexport function* fetchDogAsync() {\n  try {\n    yield put(requestDog());\n    const data = yield call(() => {\n      return fetch('https://dog.ceo/api/breeds/image/random')\n              .then(res => res.json())\n      }\n    );\n    yield put(requestDogSuccess(data));\n  } catch (error) {\n    yield put(requestDogError());\n  }\n}","import React from 'react';\nconst About = () => (<div> <br/> Be happy, baby </div>);\nexport default About;","import React from 'react';\nimport { fetchDog } from '../actions';\n\nconst Home = (props) => {\n   return (\n\t    <div>\n\t      \t{props.params.loading \n\t         ? <p>Loading...</p> \n\t         : props.params.error\n\t            ? <p>Error, try again</p>\n\t            : props.params.url \n\t            \t? <p><img src={props.params.url} alt=\"Random Dog\"/></p>\n\t            \t: <p>Click the button, please</p>}\n\t      <button onClick={() => props.params.dispatch(fetchDog())}>Show Dog</button>\n\t \t</div>\n    )\n  };\n\n export default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MainMenu = () => {\n  return (\n    <div>\n      <Link to=\"/\">\n        <button>Home</button>\n      </Link>\n      <Link to=\"/about\">\n        <button>About</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default MainMenu;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport About from '../components/About';\nimport Home from '../components/Home';\nimport MainMenu from '../components/MainMenu';\nimport logo from '../logo.png';\nimport '../App.css';\n\n// Component\nclass App extends Component {\n  render () {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>      \n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <div className=\"App-info\">\n              <h1 className=\"App-title\">Welcome!</h1>\n              <MainMenu />\n            </div>\n          </header>\n          <div>\n            <Route exact path=\"/\" render={() => (<Home params={this.props} />)} />\n            <Route exact path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducers';\nimport { watchFetchDog } from './saga';\n\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\n// Store\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware)\n);\nsagaMiddleware.run(watchFetchDog);\n\n\nconst ConnectedApp = connect((state) => {\n  console.log(state);\n  return state;\n})(App);\n\n// Container component\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedApp />\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();"],"sourceRoot":""}